version: "3.8"
services:
  #PHP Service
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: php:8.1.1-fpm
    container_name: app
    restart: unless-stopped
    tty: true
    ports:
      - "9000:9000"
      - "6001:6001"
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    depends_on:
      - app
      - db
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MySQL_HOST: localhost
      MYSQL_USER: admin@localhost
      MYSQL_DATABASE: ticketgrom
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysql/mysql-data:/var/lib/mysql
    networks:
      - app-network

  #Redis
  redis:
      image: redis:latest
      container_name: redis
      ports:
        - "6379:6379"
      networks:
        - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
